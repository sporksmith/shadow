# Syntax reference:
# https://help.github.com/en/actions/automating-your-workflow-with-github-actions/workflow-syntax-for-github-actions

name: Shadow Tests Incremental
permissions: read-all

defaults:
  run:
    shell: bash

on:
  push:
    branches: [main]
  pull_request:
    types: [opened, synchronize]
  workflow_dispatch:
    inputs:
      build:
        description: "Build new Docker images"
        type: boolean
        default: false
      push:
        description: "Push Docker images"
        type: boolean
        default: false

env:
  CARGO_TERM_COLOR: always

jobs:
  shadow:
    # use the oldest kernel supported by github's CI (make sure to update the
    # minimum supported kernel version in documentation when changing)
    # https://github.com/actions/virtual-environments
    runs-on: ubuntu-18.04
    strategy:
      matrix:
        container:
          # End of standard support: April 2023 https://wiki.ubuntu.com/Releases
          - 'ubuntu:18.04'
          # End of standard support: April 2025 https://wiki.ubuntu.com/Releases
          - 'ubuntu:20.04'
          # End of standard support: July 2022 https://wiki.ubuntu.com/Releases
          - 'ubuntu:21.10'
          # End of standard support: April 2027 https://wiki.ubuntu.com/Releases
          - 'ubuntu:22.04'
          # EOL ~August 2022 https://wiki.debian.org/DebianReleases
          - 'debian:10-slim'
          - 'debian:11-slim'
          # EOL June 7 2022 https://endoflife.date/fedora
          - 'fedora:34'
          - 'fedora:35'
          - 'fedora:36'
          # EOL May 2024 https://www.centos.org/centos-stream/
          - 'quay.io/centos/centos:stream8'
        cc: ['gcc', 'clang']
        buildtype: ['debug', 'release']
        exclude:
          # https://github.com/shadow/shadow/issues/1741
          - container: 'quay.io/centos/centos:stream8'
            cc: clang
          # https://github.com/shadow/shadow/issues/1741
          - container: 'ubuntu:21.10'
            cc: clang
          # https://github.com/shadow/shadow/issues/1741
          - container: 'fedora:35'
            cc: clang
    env:
      CC: ${{ matrix.cc }}
      CONTAINER: ${{ matrix.container }}
      BUILDTYPE: ${{ matrix.buildtype }}
      RUSTPROFILE: minimal

    steps:
      - name: Checkout
        uses: actions/checkout@v3
        with:
          persist-credentials: false
          # Run on PR head instead of merge result. Running on the merge
          # result can give confusing results, and we require PR to be up to
          # date with target branch before merging, anyway.
          # See https://github.com/shadow/shadow/issues/2166
          ref: ${{ github.event.pull_request.head.sha }}

      - name: Test
        run: |
          FLAGS=()
          FLAGS+=("-c" "${{ matrix.container }}")
          FLAGS+=("-C" "${{ matrix.cc }}")
          FLAGS+=("-b" "${{ matrix.buildtype }}")

          # Get the generated tag for the image
          IMAGETAG=`ci/run.sh -t ${FLAGS[@]}`

          if [ "${{ github.event.inputs.build}}" == "true" ]
          then
            # Build the image
            FLAGS+=("-i")

            # Fetch the base image for the build.
            # Do this before logging in to avoid charging our account for the pull.
            docker pull ${{ matrix.container }}
          else
            # Ensure the image is actually available
            if ! docker pull "${IMAGETAG}"
            then
              echo "Couldn't pull image; building"
              FLAGS+=("-i")
            fi
          fi

          if [ "${{ github.event.inputs.push}}" == "true" ]
          then
            FLAGS+=("-p")

            # Log in so that we can push
            docker login -u shadowsim --password "${{ secrets.DOCKERHUB_TOKEN }}"
          fi

          # Run
          ci/run.sh ${FLAGS[@]}

      - name: Compress logs
        if: failure()
        run: |
          shopt -s globstar
          tar -cJf build/Testing/Temporary{.tar.xz,/}
          for f in build/**/*.data; do tar -cJf "$f.tar.xz" "$f/"; done

      - name: Upload shadow data directories
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: shadow-data-dirs
          path: build/**/*.data.tar.xz

      - name: Upload shadow log file
        uses: actions/upload-artifact@v3
        if: failure()
        with:
          name: shadow-log-file
          path: build/Testing/Temporary.tar.xz
